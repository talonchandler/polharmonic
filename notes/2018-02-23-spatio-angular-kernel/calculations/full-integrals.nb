(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    102312,       2362]
NotebookOptionsPosition[     99498,       2265]
NotebookOutlinePosition[     99852,       2281]
CellTagsIndexPosition[     99809,       2278]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Rotation", " ", "matrix"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R1", " ", "=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"phi", ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R2", " ", "=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"-", "theta"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R3", " ", "=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"-", "phi"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"R", " ", "=", " ", 
    RowBox[{"R1", ".", "R2", ".", "R3"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.728756831917391*^9, 3.728756872647148*^9}, {
   3.728756916765256*^9, 3.728756943937142*^9}, {3.728756983800179*^9, 
   3.728757004265493*^9}, {3.728757036394722*^9, 3.728757152574588*^9}, 
   3.728813642283607*^9, 3.728813697298221*^9, {3.728813827322229*^9, 
   3.728813854312743*^9}, 3.72881470949813*^9, 3.7288149697975473`*^9, {
   3.72881640197747*^9, 3.728816403901929*^9}, {3.728816533365486*^9, 
   3.728816534607991*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "phi", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "phi", "]"}], "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "phi", "]"}], " ", 
       RowBox[{"Cos", "[", "theta", "]"}], " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "phi", "]"}], " ", 
       RowBox[{"Cos", "[", "theta", "]"}], " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ",", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "phi", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "theta", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "phi", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.728814709826644*^9, 3.728816405182969*^9, 
  3.72881653511036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Check", " ", "against", " ", "known"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Rk", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "theta", "]"}], " ", "-", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", "phi", "]"}], "^", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "theta", "]"}], " ", "-", " ", "1"}], 
            ")"}]}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "theta", "]"}], "-", "1"}], ")"}], "*", 
          RowBox[{"Sin", "[", "phi", "]"}], "*", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "theta", "]"}]}], 
          RowBox[{"Cos", "[", "phi", "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "theta", "]"}], "-", "1"}], ")"}], "*", 
          RowBox[{"Sin", "[", "phi", "]"}], "*", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "theta", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "phi", "]"}], "^", "2"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", "phi", "]"}], "^", "2"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "theta", "]"}]}], "*", 
          RowBox[{"Sin", "[", "phi", "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], "*", 
          RowBox[{"Cos", "[", "phi", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "theta", "]"}], "*", 
          RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
         RowBox[{"Cos", "[", "theta", "]"}]}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"R", " ", "-", " ", "Rk"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.728816254412222*^9, 3.728816304692451*^9}, 
   3.728816455797958*^9, {3.728816565787463*^9, 3.728816676566064*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.728816305301669*^9, 3.728816409283311*^9, 3.7288164564981318`*^9, 
   3.728816539962434*^9, {3.728816578768793*^9, 3.728816610397852*^9}, 
   3.728816677135581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculate", " ", "Gff"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"r", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "theta", "]"}], "*", 
        RowBox[{"Cos", "[", "phi", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "theta", "]"}], "*", 
        RowBox[{"Sin", "[", "phi", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Gff", " ", "=", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "3", "]"}], " ", "-", " ", 
      RowBox[{"Outer", "[", 
       RowBox[{"Times", ",", " ", "r", ",", " ", "r"}], "]"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.728757157642223*^9, 3.728757268601582*^9}, {
  3.7287572987494097`*^9, 3.728757318104308*^9}, {3.728757355793889*^9, 
  3.728757357907412*^9}, {3.728757392860202*^9, 3.728757463161872*^9}, {
  3.728760265712673*^9, 3.728760268603217*^9}, {3.728813716385805*^9, 
  3.728813733098865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "phi", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "theta", "]"}], "2"]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "theta", "]"}], "2"]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", "phi", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "theta", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "theta", "]"}]}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Cos", "[", "theta", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "theta", "]"}]}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "theta", "]"}], "2"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.728757231094149*^9, 3.7287572688767977`*^9}, {
   3.728757302561936*^9, 3.72875731839536*^9}, 3.728757358439067*^9, {
   3.72875739457379*^9, 3.728757463524703*^9}, 3.728760269653055*^9, {
   3.728813717271738*^9, 3.728813733426135*^9}, {3.728816459299102*^9, 
   3.728816489276662*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "Gbfp", " ", "and", " ", "check", " ", "against", " ", 
    "known"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Gbfp", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"R", ".", "Gff"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Gbfpk", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "theta", "]"}], " ", "-", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "phi", "]"}], "^", "2"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "theta", "]"}], " ", "-", " ", "1"}], 
           ")"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "*", "phi"}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "theta", "]"}], " ", "-", " ", "1"}], ")"}], 
          "/", "2"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "phi", "]"}]}], 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"2", "*", "phi"}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "theta", "]"}], "-", "1"}], ")"}], "/", 
          "2"}]}], ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"theta", "/", "2"}], "]"}], "^", "2"}], ")"}], "*", 
          RowBox[{
           RowBox[{"Sin", "[", "phi", "]"}], "^", "2"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "phi", "]"}]}], 
         RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Gbfp", " ", "-", " ", "Gbfpk"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.728813861223538*^9, 3.728813871856213*^9}, {
  3.728813902670844*^9, 3.728813955980474*^9}, {3.728814076527317*^9, 
  3.72881407863531*^9}, {3.728814176676444*^9, 3.728814303631057*^9}, {
  3.7288143355259542`*^9, 3.728814338895667*^9}, {3.728814396500893*^9, 
  3.728814494840576*^9}, {3.728814684688962*^9, 3.728814693077259*^9}, {
  3.728816696720752*^9, 3.728816700098652*^9}, {3.7288169917106447`*^9, 
  3.72881700677183*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "phi"}], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"2", " ", "phi"}], "-", "theta"}], "]"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"2", " ", "phi"}], "+", "theta"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "phi", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "phi", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "phi", "]"}], "2"]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"Cos", "[", "theta", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "theta", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "phi", "]"}], "2"]}], ")"}]}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7288139167409277`*^9, 3.72881395641121*^9}, 
   3.7288140792058372`*^9, {3.728814178535321*^9, 3.728814190473974*^9}, {
   3.7288142565655823`*^9, 3.728814270439946*^9}, 3.728814304933467*^9, 
   3.7288143392813463`*^9, {3.728814398993977*^9, 3.72881440781203*^9}, 
   3.728814445960314*^9, {3.728814476458802*^9, 3.728814495699119*^9}, {
   3.728814685613364*^9, 3.7288146934416437`*^9}, {3.7288164616834908`*^9, 
   3.72881649074785*^9}, 3.728816700466702*^9, 3.7288170073293467`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "theta", "]"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "phi", "]"}], "2"]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "phi"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"Cos", "[", "theta", "]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "phi"}], "]"}]}], ",", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "phi", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["theta", "2"], "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "phi", "]"}]}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7288139167409277`*^9, 3.72881395641121*^9}, 
   3.7288140792058372`*^9, {3.728814178535321*^9, 3.728814190473974*^9}, {
   3.7288142565655823`*^9, 3.728814270439946*^9}, 3.728814304933467*^9, 
   3.7288143392813463`*^9, {3.728814398993977*^9, 3.72881440781203*^9}, 
   3.728814445960314*^9, {3.728814476458802*^9, 3.728814495699119*^9}, {
   3.728814685613364*^9, 3.7288146934416437`*^9}, {3.7288164616834908`*^9, 
   3.72881649074785*^9}, 3.728816700466702*^9, 3.7288170073479567`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7288139167409277`*^9, 3.72881395641121*^9}, 
   3.7288140792058372`*^9, {3.728814178535321*^9, 3.728814190473974*^9}, {
   3.7288142565655823`*^9, 3.728814270439946*^9}, 3.728814304933467*^9, 
   3.7288143392813463`*^9, {3.728814398993977*^9, 3.72881440781203*^9}, 
   3.728814445960314*^9, {3.728814476458802*^9, 3.728814495699119*^9}, {
   3.728814685613364*^9, 3.7288146934416437`*^9}, {3.7288164616834908`*^9, 
   3.72881649074785*^9}, 3.728816700466702*^9, 3.728817007361979*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Write", " ", "electric", " ", "field", " ", "in", " ", "bfp"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Gff", " ", "=", " ", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{"rb", "^", "2"}]}], "]"}]}], "]"}], "*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Sin", "[", "phib", "]"}], "^", "2"}], ")"}], " ", "+", 
          " ", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"rb", "^", "2"}]}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "phib", "]"}], "^", "2"}], ")"}]}]}], ",", 
         " ", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", "*", "phib"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"rb", "^", "2"}]}], "]"}], " ", "-", " ", "1"}], ")"}],
            "/", "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"-", "rb"}], "*", 
          RowBox[{"Cos", "[", "phib", "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{"2", "*", "phib"}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"rb", "^", "2"}]}], "]"}], "-", "1"}], ")"}], "/", 
           "2"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", "phib", "]"}], "^", "2"}], " ", ")"}], "+", 
          " ", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", 
             RowBox[{"rb", "^", "2"}]}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", "phib", "]"}], "^", "2"}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"-", "rb"}], "*", 
          RowBox[{"Sin", "[", "phib", "]"}]}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7287481117828627`*^9, 3.7287483917927933`*^9}, {
   3.728748511341956*^9, 3.72874851934142*^9}, {3.7287505139691753`*^9, 
   3.728750570599691*^9}, {3.728750603566957*^9, 3.72875090800832*^9}, {
   3.728751531396419*^9, 3.728751534712096*^9}, {3.728753488291195*^9, 
   3.728753516518113*^9}, 3.728754462325027*^9, {3.728754516962675*^9, 
   3.728754530548129*^9}, {3.728754562890225*^9, 3.728754564087826*^9}, {
   3.7287568204865923`*^9, 3.728756834127309*^9}, {3.728757570656451*^9, 
   3.728757572399214*^9}, 3.728758336268382*^9, 3.7287600767834673`*^9, {
   3.728760107617853*^9, 3.728760109975808*^9}, {3.7287603867293777`*^9, 
   3.7287603889377317`*^9}, {3.7287669075604258`*^9, 3.7287669088070183`*^9}, 
   3.728767266494604*^9, 3.728768528957658*^9, {3.7288106344749002`*^9, 
   3.728810831263159*^9}, {3.728811281528707*^9, 3.728811293922688*^9}, 
   3.728811422088904*^9, {3.7288115949938507`*^9, 3.728811659258861*^9}, {
   3.728812361087843*^9, 3.7288123643353157`*^9}, 3.728812512069319*^9, {
   3.728817127323743*^9, 3.728817140373743*^9}, {3.728817188264464*^9, 
   3.72881721075462*^9}, {3.7288193093016233`*^9, 3.728819313414033*^9}, 
   3.728826354926598*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "phib", "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "phib", "]"}], "2"]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["rb", "2"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["rb", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "phib"}], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}], ")"}], 
        RowBox[{"1", "/", "4"}]]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"rb", " ", 
        RowBox[{"Cos", "[", "phib", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}], ")"}], 
        RowBox[{"1", "/", "4"}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "-", 
           SuperscriptBox["rb", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "phib"}], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}], ")"}], 
        RowBox[{"1", "/", "4"}]]}]], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "phib", "]"}], "2"], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "phib", "]"}], "2"]}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["rb", "2"]}], ")"}], 
       RowBox[{"1", "/", "4"}]]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"rb", " ", 
        RowBox[{"Sin", "[", "phib", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox["rb", "2"]}], ")"}], 
        RowBox[{"1", "/", "4"}]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.728810687731612*^9, 3.728810725675188*^9, 3.728810763822109*^9, 
   3.7288108320324173`*^9, 3.728811302673182*^9, 3.728811423259438*^9, {
   3.728811640335925*^9, 3.728811660623802*^9}, 3.7288123648266697`*^9, 
   3.7288125126239023`*^9, 3.7288170733880873`*^9, 3.7288171412598886`*^9, 
   3.728817211303664*^9, 3.728819314293838*^9, 3.7288263558356667`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "BFP", " ", "intensities"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Gffs", " ", "=", " ", 
    RowBox[{"Expand", "[", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{"Gff", ",", 
         RowBox[{"{", 
          RowBox[{"rb", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], "]"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Gx", " ", "=", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Normal", "[", 
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"Gffs", "^", "2"}], ",", 
        RowBox[{"{", 
         RowBox[{"rb", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}], "]"}],
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Expand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"Total", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"Gffs", "^", "2"}], "]"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7287669100206623`*^9, 3.7287670336907797`*^9}, {
   3.728767104887282*^9, 3.7287671321025457`*^9}, {3.728767205264832*^9, 
   3.72876725224902*^9}, 3.728768188879404*^9, {3.728769617341914*^9, 
   3.728769635773519*^9}, {3.728810090598032*^9, 3.728810114716406*^9}, {
   3.728810206711975*^9, 3.7288102519071503`*^9}, {3.728810293694232*^9, 
   3.7288103198867702`*^9}, {3.728810354818609*^9, 3.728810435541889*^9}, {
   3.728810494964327*^9, 3.728810513895822*^9}, {3.728810841740643*^9, 
   3.728810890430599*^9}, {3.728810958636629*^9, 3.7288110305500717`*^9}, {
   3.728811112520262*^9, 3.728811129540777*^9}, {3.728811172924448*^9, 
   3.7288111853124723`*^9}, {3.7288112159677687`*^9, 
   3.7288112219909573`*^9}, {3.728811322379056*^9, 3.7288113625955667`*^9}, {
   3.728811432661913*^9, 3.728811478598699*^9}, {3.728811720986095*^9, 
   3.728811721139935*^9}, {3.728811839387082*^9, 3.7288118530434723`*^9}, {
   3.7288119388015213`*^9, 3.728811960783558*^9}, {3.7288119957782373`*^9, 
   3.728812008077573*^9}, {3.728812521389044*^9, 3.728812522453087*^9}, {
   3.72881727039247*^9, 3.728817323083695*^9}, {3.7288173770434637`*^9, 
   3.728817382665279*^9}, {3.7288193784458313`*^9, 3.72881937852486*^9}, {
   3.728822127882888*^9, 3.7288221594517384`*^9}, {3.7288263667282457`*^9, 
   3.728826366864415*^9}, {3.728826425109129*^9, 3.728826425297958*^9}, {
   3.728826592539886*^9, 3.728826605438192*^9}, {3.728826678343588*^9, 
   3.728826705422092*^9}, {3.728826758105384*^9, 3.728826781932411*^9}, {
   3.7288269898325768`*^9, 3.728827018129491*^9}, {3.728827255836486*^9, 
   3.728827260176421*^9}, {3.728827752595956*^9, 3.728827752722315*^9}, {
   3.728828107080864*^9, 3.728828108850535*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "rb"}], " ", 
      RowBox[{"Cos", "[", "phib", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{
      RowBox[{"-", "rb"}], " ", 
      RowBox[{"Sin", "[", "phib", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.728817286094359*^9, 3.7288173237732067`*^9}, {
   3.728817379357663*^9, 3.728817384057592*^9}, 3.72881932304825*^9, 
   3.7288193790244837`*^9, {3.728822119640291*^9, 3.728822159881425*^9}, {
   3.728826360680987*^9, 3.728826367286242*^9}, 3.7288264260121717`*^9, {
   3.728826593099827*^9, 3.728826605856042*^9}, {3.728826679098996*^9, 
   3.7288267067637243`*^9}, 3.7288267822780943`*^9, {3.72882699343286*^9, 
   3.728827018593346*^9}, 3.7288272613039837`*^9, 3.728827753065241*^9, 
   3.728828109362956*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["rb", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", "phib", "]"}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{
      SuperscriptBox["rb", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "phib", "]"}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.728817286094359*^9, 3.7288173237732067`*^9}, {
   3.728817379357663*^9, 3.728817384057592*^9}, 3.72881932304825*^9, 
   3.7288193790244837`*^9, {3.728822119640291*^9, 3.728822159881425*^9}, {
   3.728826360680987*^9, 3.728826367286242*^9}, 3.7288264260121717`*^9, {
   3.728826593099827*^9, 3.728826605856042*^9}, {3.728826679098996*^9, 
   3.7288267067637243`*^9}, 3.7288267822780943`*^9, {3.72882699343286*^9, 
   3.728827018593346*^9}, 3.7288272613039837`*^9, 3.728827753065241*^9, 
   3.728828109378171*^9}],

Cell[BoxData[
 RowBox[{"2", "+", 
  SuperscriptBox["rb", "2"]}]], "Output",
 CellChangeTimes->{{3.728817286094359*^9, 3.7288173237732067`*^9}, {
   3.728817379357663*^9, 3.728817384057592*^9}, 3.72881932304825*^9, 
   3.7288193790244837`*^9, {3.728822119640291*^9, 3.728822159881425*^9}, {
   3.728826360680987*^9, 3.728826367286242*^9}, 3.7288264260121717`*^9, {
   3.728826593099827*^9, 3.728826605856042*^9}, {3.728826679098996*^9, 
   3.7288267067637243`*^9}, 3.7288267822780943`*^9, {3.72882699343286*^9, 
   3.728827018593346*^9}, 3.7288272613039837`*^9, 3.728827753065241*^9, 
   3.728828109390033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Calculate", " ", "integrals"}], " ", "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Ai", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Refine", "[", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Gffs", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"I", "*", "rb", "*", "rd", "*", 
             RowBox[{"Cos", "[", 
              RowBox[{"phib", " ", "-", " ", "phid"}], "]"}]}], "]"}]}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"phib", ",", " ", "0", ",", " ", 
            RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{
         RowBox[{"rb", "*", "rd"}], "\[Element]", " ", "Reals"}]}], "]"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{"AA", " ", "=", " ", 
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"rb", "*", "Ai"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"rb", ",", " ", "0", ",", " ", "rm"}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"rb", "*", "rd"}], "  ", "\[Element]", " ", "Reals"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.728751375091608*^9, 3.728751376223268*^9}, {
   3.728751430768906*^9, 3.728751432734743*^9}, {3.728751546643755*^9, 
   3.728751551765506*^9}, {3.728751626718115*^9, 3.72875163523372*^9}, {
   3.7287517181056223`*^9, 3.728751729390654*^9}, {3.728751878045005*^9, 
   3.728751879256844*^9}, {3.728751994585765*^9, 3.728751999720199*^9}, {
   3.728752114812449*^9, 3.7287521465809298`*^9}, {3.728752431109589*^9, 
   3.7287524503933897`*^9}, {3.7287526374022284`*^9, 3.728752671694715*^9}, {
   3.728752733076302*^9, 3.728752768790846*^9}, {3.728752838228006*^9, 
   3.728752844705635*^9}, {3.728752933996015*^9, 3.728752950940961*^9}, {
   3.728753015239876*^9, 3.728753048496319*^9}, {3.728753153500692*^9, 
   3.728753156521744*^9}, 3.7287534483371*^9, {3.728753540247616*^9, 
   3.728753542304908*^9}, {3.728753691655828*^9, 3.7287536989337883`*^9}, 
   3.7287538757278547`*^9, 3.728827265667592*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"1", ",", "rd"}], "]"}]}], "rd"]], "Output",
 CellChangeTimes->{3.72875353327639*^9, 3.7287537768321238`*^9, 
  3.7287539580052967`*^9, 3.728757658558172*^9, 3.728760470106122*^9, 
  3.728827309959648*^9, 3.7288277744311457`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Bi", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Gffs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", "rb", "*", "rd", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"phib", " ", "-", " ", "phid"}], "]"}]}], "]"}]}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"phib", ",", " ", "0", ",", " ", 
          RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"rb", "*", "rd"}], "\[Element]", " ", "Reals"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"BB", " ", "=", " ", 
  RowBox[{"Refine", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"rb", "*", "Bi"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"rb", ",", " ", "0", ",", " ", "rm"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"rb", "*", "rd"}], "  ", "\[Element]", " ", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.728751375091608*^9, 3.728751376223268*^9}, {
   3.728751430768906*^9, 3.728751432734743*^9}, {3.728751546643755*^9, 
   3.728751551765506*^9}, {3.728751626718115*^9, 3.72875163523372*^9}, {
   3.7287517181056223`*^9, 3.728751729390654*^9}, {3.728751878045005*^9, 
   3.728751879256844*^9}, {3.728751994585765*^9, 3.728751999720199*^9}, {
   3.728752114812449*^9, 3.7287521465809298`*^9}, {3.728752431109589*^9, 
   3.7287524503933897`*^9}, {3.7287526374022284`*^9, 3.728752671694715*^9}, {
   3.728752733076302*^9, 3.728752768790846*^9}, {3.728752838228006*^9, 
   3.728752844705635*^9}, {3.728752933996015*^9, 3.728752950940961*^9}, {
   3.728753015239876*^9, 3.728753048496319*^9}, {3.728753153500692*^9, 
   3.728753156521744*^9}, 3.7287534483371*^9, {3.728753540247616*^9, 
   3.728753578254629*^9}, {3.7287538659781027`*^9, 3.728753871425809*^9}, 
   3.7288274129618893`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7287535902585697`*^9, 3.728753788094041*^9, 
  3.728753969594762*^9, 3.728757670185656*^9, 3.728827425417183*^9, 
  3.728827782598727*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ci", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Gffs", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", "rb", "*", "rd", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"phib", " ", "-", " ", "phid"}], "]"}]}], "]"}]}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"phib", ",", " ", "0", ",", " ", 
          RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"rb", "*", "rd"}], "\[Element]", " ", "Reals"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"CC", " ", "=", " ", 
  RowBox[{"Refine", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"rb", "*", "Ci"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"rb", ",", " ", "0", ",", " ", "rm"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"rb", "*", "rd"}], "  ", "\[Element]", " ", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.728753590564378*^9, 3.7287536242129517`*^9}, 
   3.728753863249441*^9, 3.728827430318519*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "\[Pi]", " ", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"1", ",", "rd"}], "]"}]}], "rd"]], "Output",
 CellChangeTimes->{3.728753855993175*^9, 3.7287540389067907`*^9, 
  3.728757739181457*^9, 3.728827470533595*^9, 3.728827787155079*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Di", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Gffs", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", "rb", "*", "rd", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"phib", " ", "-", " ", "phid"}], "]"}]}], "]"}]}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"phib", ",", " ", "0", ",", " ", 
          RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"rb", "*", "rd"}], "\[Element]", " ", "Reals"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"DD", " ", "=", " ", 
  RowBox[{"Refine", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"rb", "*", "Di"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"rb", ",", " ", "0", ",", " ", "rm"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"rb", "*", "rd"}], "  ", "\[Element]", " ", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.728753892822846*^9, 3.728753908056202*^9}, 
   3.7288274787027073`*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"2", ",", "rd"}], "]"}], " ", 
    RowBox[{"Cos", "[", "phid", "]"}]}], "rd"]}]], "Output",
 CellChangeTimes->{3.728754043392724*^9, 3.728754538669016*^9, 
  3.728757743617951*^9, 3.728760088910561*^9, 3.7287601207780657`*^9, 
  3.728827484077137*^9, 3.728827794603046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ei", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Gffs", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"I", "*", "rb", "*", "rd", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{"phib", " ", "-", " ", "phid"}], "]"}]}], "]"}]}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{"phib", ",", " ", "0", ",", " ", 
          RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"rb", "*", "rd"}], "\[Element]", " ", "Reals"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"EE", " ", "=", " ", 
  RowBox[{"Refine", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"rb", "*", "Ei"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"rb", ",", " ", "0", ",", " ", "rm"}], "}"}]}], "]"}], ",", 
    RowBox[{
     RowBox[{"rb", "*", "rd"}], "  ", "\[Element]", " ", "Reals"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.728753916149769*^9, 3.728753925563612*^9}, 
   3.728827484896131*^9}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"2", ",", "rd"}], "]"}], " ", 
    RowBox[{"Sin", "[", "phid", "]"}]}], "rd"]}]], "Output",
 CellChangeTimes->{3.728754045463505*^9, 3.7287544721252832`*^9, 
  3.728754525069618*^9, 3.728757745705306*^9, 3.728758348104734*^9, 
  3.728760122976035*^9, 3.728827487508852*^9, 3.7288277995598383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xxx", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Refine", "[", 
    RowBox[{
     RowBox[{"Refine", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AA", "^", "2"}], " ", "+", " ", 
        RowBox[{"2", "*", 
         RowBox[{"BB", "^", "2"}]}], " ", "+", " ", 
        RowBox[{"CC", "^", "2"}], " ", "+", " ", 
        RowBox[{"DD", "*", 
         RowBox[{"Conjugate", "[", "DD", "]"}]}], " ", "+", " ", 
        RowBox[{"EE", "*", 
         RowBox[{"Conjugate", "[", "EE", "]"}]}]}], ",", " ", 
       RowBox[{"rd", " ", "\[Element]", "Reals"}]}], "]"}], ",", " ", 
     RowBox[{"phid", " ", "\[Element]", "Reals"}]}], "]"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7287540619955263`*^9, 3.7287540899580097`*^9}, {
  3.7287541628512077`*^9, 3.728754263918714*^9}, {3.7287543094127274`*^9, 
  3.7287543213683767`*^9}, {3.728759990561187*^9, 3.728759991381474*^9}, {
  3.728760136007395*^9, 3.728760144334588*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   SuperscriptBox["\[Pi]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"BesselJ", "[", 
        RowBox[{"1", ",", "rd"}], "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"BesselJ", "[", 
       RowBox[{"2", ",", "rd"}], "]"}], "2"]}], ")"}]}], 
  SuperscriptBox["rd", "2"]]], "Output",
 CellChangeTimes->{
  3.7287542644615097`*^9, 3.728754321959776*^9, 3.728754476098844*^9, 
   3.72875454183573*^9, 3.728757745784185*^9, 3.728758351291843*^9, 
   3.7287600018225718`*^9, 3.728760092840295*^9, {3.728760125714909*^9, 
   3.7287601449222918`*^9}, 3.728827494402649*^9, 3.728827802266685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rm", "=", " ", "1"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"xxx", ",", " ", 
   RowBox[{"{", 
    RowBox[{"rd", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.728754092238996*^9, 3.728754107858974*^9}, {
  3.728754145074257*^9, 3.728754151342743*^9}, {3.728758305769691*^9, 
  3.728758306321473*^9}, {3.728827534644924*^9, 3.728827535098384*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.728754108283115*^9, 3.7287541863615503`*^9}, 
   3.728754218481936*^9, 3.728754268648403*^9, 3.728754327179495*^9, 
   3.728754480290291*^9, 3.728754545648614*^9, 3.72875830693577*^9, 
   3.728758354755815*^9, 3.728760003052804*^9, 3.728760096071547*^9, {
   3.7287601280935507`*^9, 3.72876014764989*^9}, 3.7288275046585207`*^9, 
   3.728827536056155*^9, 3.728827808806522*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Bi5UBM3R8iPhf3JS7kk=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 19.739208802178542`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.728754108283115*^9, 3.7287541863615503`*^9}, 
   3.728754218481936*^9, 3.728754268648403*^9, 3.728754327179495*^9, 
   3.728754480290291*^9, 3.728754545648614*^9, 3.72875830693577*^9, 
   3.728758354755815*^9, 3.728760003052804*^9, 3.728760096071547*^9, {
   3.7287601280935507`*^9, 3.72876014764989*^9}, 3.7288275046585207`*^9, 
   3.728827536056155*^9, 3.728827808870707*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "*", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", " ", "x"}], "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"x", "^", "2"}], ")"}]}]}], ",", " ", 
     RowBox[{"2", "\[IndentingNewLine]", "*", 
      RowBox[{
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"2", ",", "x"}], "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"x", "^", "2"}], ")"}]}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", ",", " ", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.728754327219759*^9, {3.728758251364017*^9, 3.728758295691966*^9}, {
   3.7288337145365467`*^9, 3.728833755914638*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
+WRomFFZ+PePgUMSZ+MVOiXhfx5kjgc=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
yB4WdY6Ev9kiiTSZ2xkv+HfBluwwrwimJD7xrt9mt2433PWLxJcfJVHHpTXj
Y/NB0HF3fa4ySPCsSv4dHleodga7yCFJvMJ+lzqi4gp15v8O6v6QxAMlh1+5
+7tCk0r46Zw5STyfvG2lw7QrtH9hNh4Rl8Ja3OtctsIdRl1cDeUspPCWgCdz
J+0QyFuBfmCVFDYaXZJw1/aBn4/8/52rkcIw+2WuUDsfeKh/+XF5vRQGhe7N
PBbgA64qU9ZTTVLInXAxR6fAB/I4b7odaZfCnW3nG/PJvqBay5t0/JsUnnhT
20+Z9wXNNR0fY6Wl8UBrwGxegT9wZM/nFchIE/vLbNX5R/7wWkzV57m8ND7Q
MZjZ/8EfWBxnfvOvkUa1N41Hbq4+DPc+aPGlaEljEvgrPws5DAZpFzXTLaVx
0qLH2Fg/AIyX90XfiJDG3ATl2HuFgZCTSPnOfUYaJ864VAQ3BcKixHtbn2hp
9Jf0YvK8D4Tq9bsoWonSWM5M6C3hDYK1LhYVjzOlMX+H/TNu4v1M8N7mT8N3
pTFsSP/5zpVM8ME/OyyrpbFO/dXoOzEmPH3BvlNWJ40vvku/M5Njwqkv6sdC
m6SxS1/j8TctJkwKKwnxd0ij6enUXEkXJrzxW711/Xdp3OKbFrvhNhM0Z17k
XBiXxrnzM2rm5UxIiUzg/ftLGg9+VQiwqmWC6WWergcz0lgYkpewqo0JtU/n
fXbykDF9hfth5jgTsqkjl1gKZAwM3SrbtD4Y5orzF98pkfG39Zqr+3WCgaHn
7r5VhYyTHIJvvmwNhtW2HzfwbCAja/9jm3zLYDhzorv5ogEZDeuGVbi8g+HQ
u4e/axlkfPrj61tqVjCIDLZd/LqHjKs8PsZ15ATD/R9v9VfvIyO3HinN63Yw
iHGOn/JwJ6P7rabLjIpgeKguvWp1EBmfhXz8qNESDH66tDJ9FhmFfvE81HgR
DJLbNew9jpLRcl70tfSrYDjstCOz9gQZc02Nw4p7g4ESyaR5xJNxYXVVcNuP
YGhJOtGSkkRGx+0GoTKTwRB8Kda39hwZ4w9MpztNB8Pz4uxyoYtkHGhVE0ha
DIZj755vrc0l6jnoVDO+igVKg90DX/LJqD1cZ3ROmAXtPwYihQrJeOkndy9Z
nAXKnH+fuZeRUZYprPyLzILX6oqOQvfJ+Gtt68Y0FRZE6K6f1Wsk48Xwe4Ix
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
B8VAzuE=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 0.15459191954042273`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.728758268979618*^9, 3.728758296163515*^9}, {
  3.728833744964388*^9, 3.728833757467211*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "spherical", " ", "harmonics", " ", "coefficients"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GG", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"aa", ",", " ", "bb", ",", " ", "dd"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"bb", ",", " ", "cc", ",", " ", "ee"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "phi", "]"}], "*", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "phi", "]"}], "*", 
        RowBox[{"Sin", "[", "theta", "]"}]}], ",", " ", 
       RowBox[{"Cos", "[", "theta", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"e", " ", "=", " ", 
    RowBox[{"GG", ".", "s"}]}], "\[IndentingNewLine]", 
   RowBox[{"intensity", " ", "=", " ", 
    RowBox[{"e", ".", "e"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.728754571325233*^9, 3.7287547931642427`*^9}, {
  3.728755053736721*^9, 3.728755055684935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"dd", " ", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
    RowBox[{"aa", " ", 
     RowBox[{"Cos", "[", "phi", "]"}], " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
    RowBox[{"bb", " ", 
     RowBox[{"Sin", "[", "phi", "]"}], " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"ee", " ", 
     RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
    RowBox[{"bb", " ", 
     RowBox[{"Cos", "[", "phi", "]"}], " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
    RowBox[{"cc", " ", 
     RowBox[{"Sin", "[", "phi", "]"}], " ", 
     RowBox[{"Sin", "[", "theta", "]"}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7287546416229057`*^9, 3.728754794763337*^9}, 
   3.728755064625326*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"dd", " ", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
     RowBox[{"aa", " ", 
      RowBox[{"Cos", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
     RowBox[{"bb", " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ee", " ", 
      RowBox[{"Cos", "[", "theta", "]"}]}], "+", 
     RowBox[{"bb", " ", 
      RowBox[{"Cos", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}], "+", 
     RowBox[{"cc", " ", 
      RowBox[{"Sin", "[", "phi", "]"}], " ", 
      RowBox[{"Sin", "[", "theta", "]"}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.7287546416229057`*^9, 3.728754794763337*^9}, 
   3.728755064636694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Expand", " ", "onto", " ", "constant", " ", "spherical", " ", 
    "harmonics"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"I0inner", " ", "=", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"intensity", "*", 
       RowBox[{"Sin", "[", "theta", "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"theta", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"I0", " ", "=", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{"I0inner", ",", " ", 
      RowBox[{"{", 
       RowBox[{"phi", ",", " ", "0", ",", " ", 
        RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.728754811093327*^9, 3.7287548194668818`*^9}, {
  3.728754997074593*^9, 3.7287550922750607`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["2", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["aa", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["bb", "2"]}], "+", 
    SuperscriptBox["cc", "2"], "+", 
    SuperscriptBox["dd", "2"], "+", 
    SuperscriptBox["ee", "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["aa", "2"], "-", 
       SuperscriptBox["cc", "2"]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "phi"}], "]"}]}], "+", 
    RowBox[{"2", " ", "bb", " ", 
     RowBox[{"(", 
      RowBox[{"aa", "+", "cc"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "phi"}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.728755046884479*^9, 3.728755096988496*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["aa", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["bb", "2"]}], "+", 
    SuperscriptBox["cc", "2"], "+", 
    SuperscriptBox["dd", "2"], "+", 
    SuperscriptBox["ee", "2"]}], ")"}], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{{3.728755046884479*^9, 3.7287550970796137`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "x"}], "]"}], "*", "x"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "0", " ", ",", " ", "Infinty"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7288336835309973`*^9, 3.728833691892085*^9}, {
  3.728930237200035*^9, 3.7289303053299723`*^9}, {3.728930981903964*^9, 
  3.728931055822556*^9}}],

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{
   RowBox[{"x", " ", "*", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", "*", "x"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinty"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728931067701263*^9, 3.72893107364703*^9}}],

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"1", ",", 
      RowBox[{"k", " ", "*", "x"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinty"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728931081784643*^9, 3.7289310890619287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "x"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinty"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.728931102014683*^9, 3.728931102696773*^9}}],

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", 
      RowBox[{"k", " ", "x"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinty"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.728931103035075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integral", "[", 
  RowBox[{"x", " ", 
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", 
     RowBox[{"k", " ", "x"}]}], "]"}], "*", 
   RowBox[{"Exp", "[", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Infinty"}], "}"}]}], "]"}], 
   "h"}]}]], "Input",
 CellChangeTimes->{{3.7289308910052137`*^9, 3.728930902042988*^9}, {
  3.72893111172449*^9, 3.728931119595922*^9}, {3.728932828957576*^9, 
  3.7289328319738293`*^9}}],

Cell[BoxData[
 RowBox[{"HankelTransform", "[", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "r"}]], ",", "r", ",", "s"}], "]"}]], "Output",
 CellChangeTimes->{3.728930902422206*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.728930921733396*^9, 3.72893097172535*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.728857211395081*^9, 3.728857266346146*^9}}]
},
WindowSize->{1280, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 11, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1478, 37, 114, "Input"],
Cell[2061, 61, 1881, 57, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3979, 123, 2370, 65, 114, "Input"],
Cell[6352, 190, 449, 12, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6838, 207, 1112, 28, 63, "Input"],
Cell[7953, 237, 2093, 59, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10083, 301, 2621, 70, 114, "Input"],
Cell[12707, 373, 2550, 70, 84, "Output"],
Cell[15260, 445, 2011, 55, 85, "Output"],
Cell[17274, 502, 767, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18078, 522, 3627, 89, 97, "Input"],
Cell[21708, 613, 2979, 94, 138, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24724, 712, 2754, 52, 114, "Input"],
Cell[27481, 766, 966, 22, 28, "Output"],
Cell[28450, 790, 1036, 24, 35, "Output"],
Cell[29489, 816, 609, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30135, 831, 2217, 50, 46, "Input"],
Cell[32355, 883, 332, 7, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32724, 895, 2026, 46, 46, "Input"],
Cell[34753, 943, 188, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34978, 951, 1239, 35, 46, "Input"],
Cell[36220, 988, 282, 6, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36539, 999, 1217, 35, 46, "Input"],
Cell[37759, 1036, 417, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38213, 1050, 1215, 35, 46, "Input"],
Cell[39431, 1087, 441, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39909, 1101, 959, 22, 28, "Input"],
Cell[40871, 1125, 707, 18, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41615, 1148, 426, 8, 46, "Input"],
Cell[42044, 1158, 428, 6, 28, "Output"],
Cell[42475, 1166, 16310, 279, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58822, 1450, 796, 23, 46, "Input"],
Cell[59621, 1475, 32096, 540, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91754, 2020, 1327, 35, 131, "Input"],
Cell[93084, 2057, 803, 22, 28, "Output"],
Cell[93890, 2081, 884, 25, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94811, 2111, 840, 22, 63, "Input"],
Cell[95654, 2135, 758, 23, 48, "Output"],
Cell[96415, 2160, 391, 11, 48, "Output"]
}, Open  ]],
Cell[96821, 2174, 426, 11, 28, "Input"],
Cell[97250, 2187, 332, 9, 28, InheritFromParent],
Cell[97585, 2198, 335, 9, 28, InheritFromParent],
Cell[CellGroupData[{
Cell[97945, 2211, 328, 9, 28, InheritFromParent],
Cell[98276, 2222, 305, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98618, 2236, 471, 13, 28, "Input"],
Cell[99092, 2251, 203, 5, 35, "Output"]
}, Open  ]],
Cell[99310, 2259, 89, 1, 28, "Input"],
Cell[99402, 2262, 92, 1, 28, "Input"]
}
]
*)

